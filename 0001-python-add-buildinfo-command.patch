From 6a83947d9d24ef63d9f7db56920e63145a520073 Mon Sep 17 00:00:00 2001
From: ajinath <ajinath.kumbhar@oneplus.com>
Date: Wed, 19 Dec 2018 16:06:56 +0530
Subject: [PATCH] python : add buildinfo command

---
 python/abuild.py                | 40 ++++++++++++++++++++++++++
 python/androidutils/__init__.py |  0
 python/androidutils/adb.py      | 50 +++++++++++++++++++++++++++++++++
 python/utils/__init__.py        |  0
 python/utils/systemUtils.py     |  4 +++
 5 files changed, 94 insertions(+)
 create mode 100755 python/abuild.py
 create mode 100644 python/androidutils/__init__.py
 create mode 100644 python/androidutils/adb.py
 create mode 100644 python/utils/__init__.py
 create mode 100644 python/utils/systemUtils.py

diff --git a/python/abuild.py b/python/abuild.py
new file mode 100755
index 0000000..e4c97d0
--- /dev/null
+++ b/python/abuild.py
@@ -0,0 +1,40 @@
+#!/usr/bin/python
+
+import os
+import subprocess
+from androidutils.adb import adb
+
+adb = adb()
+def main():
+    if not adb.isConnected():
+        print 'Please connect device or check adb permission'
+        return
+    print 'Product name         : ',
+    adb.shell('getprop ro.product.name',needoutput=True)
+    print 'Project name         : ',
+    adb.shell('getprop ro.boot.project_name',needoutput=True)
+    print 'Factory Serial No.   : ',
+    adb.shell('getprop ro.serialno',needoutput=True)
+    print 'HW Serial No.        : ',
+    adb.shell('getprop ro.serialno.hw',needoutput=True)
+    print 'Build Details        : ',
+    adb.shell('getprop ro.build.display.id',needoutput=True)
+    print 'Build fingerprint    : ',
+    adb.shell('getprop ro.build.fingerprint',needoutput=True)
+    print 'Build date           : ',
+    adb.shell('getprop ro.build.date',needoutput=True)
+    print 'Kernel Build date    : ',
+    adb.shell('getprop ro.bootimage.build.date',needoutput=True)
+    print 'MPSS Build baseband  : ',
+    adb.shell('getprop gsm.version.baseband',needoutput=True)
+    print 'MPSS Build baseband1 : ',
+    adb.shell('getprop gsm.version.baseband1',needoutput=True)
+    print 'GMS Build 	     : ',
+    adb.shell('getprop ro.com.google.gmsversion',needoutput=True)
+    print 'Security Patch Level : ',
+    adb.shell('getprop ro.build.version.security_patch',needoutput=True)
+
+
+
+if __name__ == '__main__':
+    main()
diff --git a/python/androidutils/__init__.py b/python/androidutils/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/python/androidutils/adb.py b/python/androidutils/adb.py
new file mode 100644
index 0000000..6a7e35e
--- /dev/null
+++ b/python/androidutils/adb.py
@@ -0,0 +1,50 @@
+import os 
+import subprocess
+import utils.systemUtils as util
+
+def runSystemCommand(cmd, out=True):
+    # p = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
+    # for line in p.stdout.readlines():
+    #     print line,
+    
+    with open(os.devnull, 'w')  as FNULL:
+        try:
+            if not out:
+                ret = subprocess.call(cmd, shell=True,stdout=FNULL, stderr=subprocess.STDOUT)
+            else:
+                ret = subprocess.call(cmd, shell=True, stderr=subprocess.STDOUT)
+
+        except subprocess.CalledProcessError:
+            print 'failed to execute ret val :' + str(ret) + 'command : ' + cmd
+        finally:
+            FNULL.close()
+        
+    return ret
+
+def runSystemCommandAndGetoutput(cmd, out=True):
+    p = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
+    for line in p.stdout.readlines():
+        print line,
+    ret = p.wait()
+    return ret    
+
+class adb:
+    def __init__(self):
+        self.name = 'adb'
+
+    def shell(self,cmd,needoutput=False):
+        adbshell = 'adb shell '
+        command = adbshell + cmd
+        #print command 
+        if needoutput:
+            return runSystemCommandAndGetoutput(command,out=False)
+                   
+        runSystemCommand(command)
+
+    def sudoShell(self,cmd):
+        sudocmd = 'su 0 '
+        self.shell(sudocmd + cmd)
+    
+    def isConnected(self):
+        return util.CONVERT_TO_C_RETURN(
+            runSystemCommand('adb shell time', out=False))
\ No newline at end of file
diff --git a/python/utils/__init__.py b/python/utils/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/python/utils/systemUtils.py b/python/utils/systemUtils.py
new file mode 100644
index 0000000..16f3f0c
--- /dev/null
+++ b/python/utils/systemUtils.py
@@ -0,0 +1,4 @@
+import os 
+
+def CONVERT_TO_C_RETURN(val):
+    return not val
\ No newline at end of file
-- 
2.17.1

